sudoku([4, _, _, _,_, 3, _, _,_, _, 1, _,_, 1, _, 2], Solution).


sudolu([5,3,_,4,_,6,_,_,7,_,_,1,_,8,_,6,_,_,_,4,_,9,_,2,_,3,_,1,9,_,_,_,_,_,5,3,_,_,7,_,_,_,2,_,_,6,5,_,_,_,_,_,7,8,_,1,_,8,_,7,_,6,_,_,_,9,_,3,_,8,_,_,4,_,_,6,_,1,_,_,9], solution).
sudoku([5,3,_,6,7,8,_,1,2,6,_,2,1,9,_,3,4,8,1,_,8,3,4,2,5,6,_,8,5,9,7,6,1,4,2,3,4,2,6,8,5,3,7,9,1,7,1,3,9,_,4,8,5,6,9,6,1,5,3,7,2,8,4,2,_,7,4,1,9,6,3,5,3,4,5,2,_,6,1,7,9], Solution).



myDelete([], Item, []).
myDelete([Item|T], Item, Result) :-
    myDelete(T, Item, Result).
myDelete([H|T], Item, [H|Result]):-
    myDelete(T, Item, Result).
 


myDelete(L, [H|T], R) :-
    delete(L, H, R1),
    myDelete(R1, T, R).
myDelete(L, [], L).


gcd(0, X, X):- X > 0, !.
gcd(X, Y, Z):- X >= Y, X1 is X-Y, gcd(X1,Y,Z).
gcd(X, Y, Z):- X < Y, X1 is Y-X, gcd(X1,X,Z).



gcd(a, b, Result):- 
    a = b, 
    Result = a.
gcd(a, b, Result):-
    a < b,
    b1 is b-a,
    gcd(a, b1, Result).
gcd(a, b, Result):-
    a > b,
    gcd(b, a, Result).


